global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3
        tune.ssl.default-dh-param 2048

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 3000
        timeout client  10000
        timeout server  10000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

listen main
    acl ru_domain hdr_end(host) -i .ru
    acl has_www hdr_beg(host) -i www.
    bind *:80
{% if letsencrypt is defined and letsencrypt_stage > 0 %}
    bind *:443 ssl crt {{ haproxy.cert_path }}
    http-request redirect prefix https://%[hdr(host),regsub(\.ru$,.com,i)] code 301 if ru_domain
    redirect scheme https code 301 if !{ ssl_fc }
    http-request redirect prefix https://%[hdr(host),regsub(^www\.,,i)] code 301 if has_www
{% else %}
    http-request redirect prefix http://%[hdr(host),regsub(\.ru$,.com,i)] code 301 if ru_domain
    http-request redirect prefix http://%[hdr(host),regsub(^www\.,,i)] code 301 if has_www
{% endif %}
    mode http
    balance roundrobin
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    option httpclose
    option forwardfor
    cookie {{ php.settings.session.name }} prefix
    option http-server-close
    timeout http-keep-alive 3000
    server back01 10.135.20.240:80 cookie {{ 'back01'|hash('md5') }} check maxconn 32
{% if letsencrypt is defined %}
    acl letsencrypt-acl path_beg /.well-known/acme-challenge/
    use_backend letsencrypt-backend if letsencrypt-acl
{% endif %}

listen stats
    bind *:1789
    mode http
    stats enable
    stats uri /
    stats hide-version
    stats realm Strictly\ Private
    stats auth eddiespb:ZaZoZy5k

{% if letsencrypt is defined %}
backend letsencrypt-backend
   server letsencrypt 127.0.0.1:{{ letsencrypt.standalone_port }}
{% endif %}
